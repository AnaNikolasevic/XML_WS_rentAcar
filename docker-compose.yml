version: '3'
services:

  eureka-service:
    build: ./Microservices/eurekaService
    container_name: eureka-service
    networks:
      - application-network
    ports:
      - "8761:8761"
    tty: true

  postgres:
    image: 'postgres'
    container_name: postgres
    restart: always
    networks:
      -  application-network
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=services
      - REGISTRY_HOST=eureka-service
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    tty: true

  add-service:
    build: ./Microservices/addvertismentService
    ports:
      - "8087:8087"
    tty: true
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-service
      POSTGRES_DB: services
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
    networks:
      -  application-network
    depends_on:
      - eureka-service
      - postgres
      - rabbitmq

  user-service:
    build: ./Microservices/userService
    ports:
      - "8082:8082"
    tty: true
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-service
      POSTGRES_DB: services
    networks:
      - application-network
    depends_on:
      - eureka-service
      - postgres

  rent-service:
    build: ./Microservices/rentService
    ports:
      - "8084:8084"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-service
      POSTGRES_DB: services
    networks:
      - application-network
    tty: true
    depends_on:
      - eureka-service
      - postgres

  search-service:
    build: ./Microservices/searchService
    ports:
      - "8085:8085"
    tty: true
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-service
      POSTGRES_DB: services
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
    networks:
      - application-network
    depends_on:
      - eureka-service
      - postgres
      - rabbitmq


  agent:
    build: ./Agent/Backend
    ports:
      - "8081:8081"
    tty: true
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      POSTGRES_DB: agentapp
    networks:
      - application-network
    depends_on:
      - postgres


  zuul:
    build: ./Microservices/zuulService/zuul
    networks:
      - application-network
    ports:
      - "8662:8662"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-service
    tty: true
    depends_on:
      - eureka-service
      - postgres

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: test
      RABBITMQ_DEFAULT_PASS: test
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - application-network

networks:
  application-network:
    driver: bridge



